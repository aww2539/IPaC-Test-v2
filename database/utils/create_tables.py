from .connect_to_db import conn
import psycopg2


def create_category_sids_table():
    print("Creating category_sids table...")
    with conn:
        sql = '''
            CREATE TABLE IF NOT EXISTS category_sids (
                id BIGINT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
                category_id BIGINT
            )
        '''


        cursor = conn.cursor()
        try:
            cursor.execute(sql)
        except psycopg2.Error as error:
            print(error)

        cursor.close()
        print("category_sids table created.")

def create_feature_sids_table():
    print("Creating feature_sids table...")
    with conn:
        sql = '''
            CREATE TABLE IF NOT EXISTS feature_sids (
                id BIGINT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
                feature_id BIGINT
            )
        '''


        cursor = conn.cursor()
        try:
            cursor.execute(sql)
        except psycopg2.Error as error:
            print(error)

        cursor.close()
        print("feature_sids table created.")

def create_categories_table():
    print("Creating categories table...")
    with conn:
        sql = '''
            CREATE TABLE IF NOT EXISTS categories (
                id BIGINT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
                sid BIGINT,
                name VARCHAR (255),
                sort_order INT,
                optional_description VARCHAR (500),
                optional_display_description VARCHAR (500),
                is_resource_category BOOLEAN DEFAULT false
            )
        '''
        
        cursor = conn.cursor()
        try:
            cursor.execute(sql)
        except psycopg2.Error as error:
            print(error)

        cursor.close()
        print("Categories table created.")

def create_features_table():
    print("Creating features table...")
    with conn:
        sql = '''
            CREATE TABLE IF NOT EXISTS features (
                id BIGINT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
                sid BIGINT,
                category_id BIGINT,
                category_sid BIGINT,
                display_name VARCHAR (255),
                ep_keywords TEXT [],
                optional_description VARCHAR (500),
                is_deleted BOOLEAN DEFAULT false,
                status_code VARCHAR (255),
                start_date TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP,
                optional_end_date TIMESTAMPTZ
            )
        '''

        cursor = conn.cursor()
        try:
            cursor.execute(sql)
        except psycopg2.Error as error:
            print(error)

        cursor.close()
        print("Features table created.")

def create_all_tables():
    print("Creating all tables...")

    create_category_sids_table()
    create_feature_sids_table()
    create_categories_table()
    create_features_table()

    print("All tables created.")



